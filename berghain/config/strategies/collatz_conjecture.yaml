# Collatz Conjecture Strategy  
# Uses the 3n+1 problem dynamics for adaptive decision-making patterns

name: "Collatz Conjecture"
description: "Applies Collatz conjecture (3n+1) dynamics for chaotic yet convergent optimization patterns"

# Core parameters based on Collatz sequence properties
parameters:
  # Collatz-based thresholds using stopping time statistics
  ultra_rare_threshold: 0.0526   # 1/19 (19 has stopping time 20)
  rare_threshold: 0.1111         # 1/9 (9 has stopping time 19)  
  
  # Acceptance rates using Collatz convergence patterns
  ultra_rare_accept_rate: 0.9474 # 18/19 (complement of threshold)
  rare_accept_rate: 0.8421       # 16/19 (convergence-weighted)
  common_accept_rate: 0.5714     # 4/7 (Collatz cycle contains 4→2→1)
  no_constraint_accept_rate: 0.0313  # 1/32 (2^5, power-of-2 pattern)
  
  # Phase thresholds using Collatz statistics
  early_game_threshold: 0.2727   # 3/11 (11 has interesting trajectory)
  mid_game_threshold: 0.6364     # 7/11 (complement)
  
  # Collatz sequence parameters
  max_iterations: 1000           # Safety limit for sequence computation
  stopping_time_limit: 100       # Maximum stopping time to consider
  
  # Notable Collatz numbers and their stopping times
  collatz_landmarks: {
    1: 0, 2: 1, 3: 7, 4: 2, 5: 5, 6: 8, 7: 16, 8: 3, 9: 19, 
    10: 6, 11: 14, 12: 9, 13: 9, 14: 17, 15: 17, 16: 4, 27: 111
  }
  
  # Hailstone sequence multipliers
  odd_multiplier: 3              # 3n+1 for odd numbers
  even_divisor: 2                # n/2 for even numbers

# Collatz dynamics mechanics
collatz_mechanics:
  # Trajectory analysis
  trajectory_analysis:
    enabled: true
    stopping_time_weighting: true     # Weight by steps to reach 1
    max_value_tracking: true          # Track maximum value in sequence
    
  # Convergence patterns
  convergence_behavior:
    enabled: true
    cycle_detection: true             # Detect 4→2→1→4 cycle
    eventual_convergence: true        # Assume conjecture is true
    
  # Chaotic dynamics
  chaotic_properties:
    enabled: true
    sensitive_dependence: true        # Small changes → large differences
    unpredictability: true           # Cannot predict stopping times
    
  # Statistical patterns
  statistical_analysis:
    enabled: true
    stopping_time_distribution: true  # Analyze stopping time patterns
    trajectory_length_stats: true     # Statistical behavior

# Hailstone sequence applications
hailstone_patterns:
  # Sequence generation
  sequence_generation:
    enabled: true
    iterative_computation: true
    memoization: true                # Cache computed sequences
    
  # Pattern recognition
  pattern_detection:
    enabled: true
    power_of_two_detection: true     # 2^k numbers have stopping time k
    odd_number_behavior: true        # 3n+1 increases then decreases
    
  # Glide patterns
  glide_analysis:
    enabled: true
    consecutive_descents: true        # Count consecutive /2 operations
    ascent_descent_ratio: true       # Balance of increases vs decreases

# Phase-specific Collatz behaviors
phases:
  early:
    description: "Hailstone ascent - allow chaotic exploration"
    high_stopping_time_preference: true
    chaotic_exploration: true
    trajectory_diversity: true
    
  mid:
    description: "Convergence seeking - balance ascent and descent"
    stopping_time_optimization: true
    balanced_trajectories: true
    glide_pattern_detection: true
    
  late:
    description: "Final convergence - approach the 1-cycle"
    low_stopping_time_preference: true
    convergence_acceleration: true
    cycle_completion_focus: true
    
  panic:
    description: "Emergency convergence - forced descent"
    emergency_stopping_time: 5      # Use numbers with short paths
    power_of_two_preference: true

# Mathematical properties and conjectures
mathematical_properties:
  # Unproven conjectures
  collatz_conjecture: true         # All positive integers reach 1
  weak_collatz_conjecture: false   # Weaker version
  
  # Statistical conjectures
  benford_law: true               # First digits follow Benford's law
  probabilistic_model: true       # Random walk analogy
  
  # Computational verification
  verified_range: 2.95e19         # Computationally verified up to ~3×10^19
  
  # Related problems
  generalized_collatz: false      # ax+b/cx+d variants
  two_step_collatz: false         # Different rule sets

# Trajectory analysis and statistics
trajectory_statistics:
  # Stopping time analysis
  stopping_time_stats:
    enabled: true
    mean_stopping_time: 9.5       # Approximate average
    variance_analysis: true
    
  # Maximum height analysis
  height_statistics:
    enabled: true
    altitude_tracking: true        # Maximum value reached
    growth_rate_analysis: true
    
  # Glide statistics  
  glide_analysis_stats:
    enabled: true
    average_glide_length: 3.5     # Average consecutive descents
    glide_distribution: true

# Scenario adjustments using Collatz theory
scenario_adjustments:
  1:  # Friday Night
    stopping_time_bonus: 1.3
    trajectory_length_preference: "medium"
    chaotic_exploration_factor: 1.2
    
  2:  # Saturday Night (creative ultra-rare)
    ultra_rare_threshold: 0.0370  # 1/27 (27 has record stopping time 111)
    ultra_rare_accept_rate: 0.9963 # (27-1)/27 × boost
    high_stopping_time_mode: true
    
  3:  # Sunday Night (multi-constraint)
    multi_trajectory_analysis: true
    glide_pattern_bonus: 2.0
    convergence_balancing: true

# Special Collatz numbers and records
special_numbers:
  # Record holders
  highest_stopping_time: 27       # Stopping time 111 (for n < 100)
  delayed_minimum: 27             # First number with stopping time > 100
  
  # Powers of 2
  power_of_two_sequence: [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]
  
  # Interesting trajectories  
  high_peaks: [27, 31, 41, 47, 54, 55, 62, 63]
  long_tails: [27, 39, 54, 55, 73, 78, 87]

# Computational aspects
computational_collatz:
  # Optimization techniques
  memoization: true              # Cache stopping times
  iterative_computation: true    # Avoid recursion depth
  
  # Cycle detection
  floyd_cycle_detection: true    # Detect cycles efficiently
  
  # Performance considerations
  early_termination: true        # Stop when reaching known values
  bit_operations: true           # Use bit shifts for even numbers
  
  # Safety measures
  iteration_limit: 10000         # Prevent infinite loops
  overflow_protection: true      # Handle large numbers

# Research connections and open problems
research_aspects:
  # Open questions
  finite_stopping_time: true     # Do all numbers eventually reach 1?
  cycle_existence: false          # Are there other cycles?
  
  # Probabilistic analysis
  random_walk_model: true        # Model as stochastic process
  branching_process: false       # Tree-like structure analysis
  
  # Computational complexity
  complexity_unknown: true       # Is deciding convergence computable?
  
  # Generalizations
  polynomial_generalizations: false
  matrix_generalizations: false

# Connections to other mathematics
mathematical_connections:
  # Number theory
  multiplicative_functions: false
  additive_number_theory: false
  
  # Dynamical systems
  discrete_dynamics: true
  chaos_theory: true
  
  # Probability theory  
  random_walks: true
  markov_chains: false
  
  # Computer science
  complexity_theory: true
  algorithm_analysis: true