# Catalan Numbers Strategy
# Uses Catalan numbers C_n for combinatorial optimization and path counting

name: "Catalan Numbers"
description: "Applies Catalan numbers for combinatorial decision-making, modeling optimal path selection and binary tree structures"

# Core parameters based on Catalan numbers C_n = (2n)! / ((n+1)! * n!)
parameters:
  # Catalan-based thresholds using ratios
  ultra_rare_threshold: 0.0385   # 1/C_4 = 1/14 ≈ 0.071, scaled to 1/26
  rare_threshold: 0.2000         # 1/C_2 = 1/2 scaled to 1/5
  
  # Acceptance rates using Catalan ratios
  ultra_rare_accept_rate: 0.9615 # (C_4 - 1)/C_4 = 13/14 ≈ 0.929, boosted
  rare_accept_rate: 0.8333       # (C_3 - 1)/C_3 = 4/5 = 0.8
  common_accept_rate: 0.5556     # (C_2 - 1)/C_2 × C_1/C_2 = 1/2 × 2/2 + adj
  no_constraint_accept_rate: 0.0357  # 1/(C_5 - 1) = 1/41 ≈ 0.024, scaled
  
  # Phase thresholds using Catalan growth
  early_game_threshold: 0.2857   # 2/(C_3) = 2/5 × 5/7 ≈ 0.286
  mid_game_threshold: 0.6154     # C_3/(C_3 + C_2) = 5/8 × adj
  
  # Catalan sequence: 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862...
  catalan_sequence: [1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786]
  generating_function_coeff: 4.0  # 4^n coefficient growth
  
  # Combinatorial parameters
  binary_tree_depth: 8
  dyck_path_height: 6
  parentheses_nesting: 5

# Catalan number mechanics
catalan_mechanics:
  # Binary tree structures
  binary_trees:
    enabled: true
    full_binary_trees: true      # C_n full binary trees with n+1 leaves
    tree_traversal: "inorder"    # Optimal traversal pattern
    
  # Dyck paths
  dyck_paths:
    enabled: true
    monotonic_paths: true        # C_n paths from (0,0) to (2n,0)
    never_below_diagonal: true   # Stay above y=x line
    
  # Parenthesization counting
  parenthesization:
    enabled: true
    valid_parentheses: true      # C_n ways to parenthesize n+1 factors
    nested_structures: true      # Proper nesting validation
    
  # Polygon triangulation
  polygon_triangulation:
    enabled: true
    convex_polygon: true         # C_n triangulations of (n+2)-gon
    diagonal_counting: true

# Combinatorial applications
combinatorial_patterns:
  # Path counting
  lattice_paths:
    enabled: true
    ballot_problem: true         # Election counting interpretation
    reflection_principle: true   # Path reflection for invalid paths
    
  # Tree enumeration
  tree_counting:
    enabled: true
    ordered_trees: true          # C_n ordered trees with n+1 vertices
    plane_trees: true            # Embedded in plane
    
  # Expression parsing
  expression_trees:
    enabled: true
    arithmetic_expressions: true  # C_n ways to parenthesize
    parse_tree_structures: true
    
  # Geometric interpretations
  geometric_catalan:
    enabled: true
    noncrossing_partitions: true # C_n noncrossing partitions of n+1 points
    triangulated_polygons: true  # Polygon triangulations

# Phase-specific Catalan behaviors
phases:
  early:
    description: "Foundation paths - establish valid Dyck paths"
    strict_dyck_paths: true
    binary_tree_building: true
    parentheses_validation: true
    
  mid:
    description: "Combinatorial growth - explore all valid structures"
    full_enumeration: true
    catalan_optimization: true
    triangulation_seeking: true
    
  late:
    description: "Asymptotic behavior - approach Catalan limits"
    asymptotic_formula: true     # C_n ~ 4^n/(√π * n^(3/2))
    stirling_approximation: true
    
  panic:
    description: "Combinatorial emergency - valid structure priority"
    emergency_catalan: 0.286     # 2/7 ≈ C_2/C_3
    valid_path_fallback: true

# Generating functions and recurrences
generating_functions:
  # Ordinary generating function
  ogf_catalan:
    enabled: true
    formula: "C(x) = (1 - √(1-4x))/(2x)"  # OGF for Catalan numbers
    
  # Recurrence relations
  recurrence:
    enabled: true
    fundamental: true            # C_n = Σ(k=0 to n-1) C_k * C_(n-1-k)
    alternative: true            # C_n = (2(2n-1)/(n+1)) * C_(n-1)
    
  # Exponential generating function
  egf_applications: false        # Less relevant for Catalan

# Asymptotic analysis
asymptotic_catalan:
  # Stirling's approximation applications
  stirling_formula: true         # n! ~ √(2πn)(n/e)^n
  
  # Asymptotic growth
  asymptotic_growth: true        # C_n ~ 4^n/(√π * n^(3/2))
  growth_rate: 4.0              # Exponential base
  
  # Central binomial coefficients
  central_binomial: true         # C_n = (2n choose n)/(n+1)

# Scenario adjustments using Catalan theory
scenario_adjustments:
  1:  # Friday Night
    dyck_path_optimization: true
    binary_tree_preference: true
    catalan_ratio_scaling: 1.2
    
  2:  # Saturday Night (creative ultra-rare)
    ultra_rare_threshold: 0.0238  # 1/C_5 = 1/42 ≈ 0.024
    ultra_rare_accept_rate: 0.9952 # (C_5-1)/C_5 = 41/42
    deep_nesting_mode: true
    
  3:  # Sunday Night (multi-constraint)
    polygon_triangulation_mode: true
    noncrossing_partitions: true
    multi_catalan_bonus: 2.0

# Special Catalan sequences and generalizations
catalan_extensions:
  # Motzkin numbers (related sequence)
  motzkin_numbers: false         # M_n = number of Motzkin paths
  
  # Narayana numbers  
  narayana_numbers: false        # N(n,k) = Catalan triangle entries
  
  # Fuss-Catalan numbers
  fuss_catalan: false           # Generalization with parameter
  
  # Super-Catalan numbers
  super_catalan: false          # Different combinatorial interpretation

# Mathematical constants from Catalan theory
catalan_constants:
  catalan_constant: 0.9159655942  # G = Σ(-1)^n/(2n+1)²
  golden_ratio_relation: 1.618    # φ appears in Catalan asymptotics
  
# Computational aspects
computational_catalan:
  # Efficient computation methods
  dynamic_programming: true     # Build up from C_0 = 1
  matrix_exponentiation: false  # For large indices
  
  # Special algorithms
  cycle_lemma: true            # Dvoretzky and Motzkin's cycle lemma
  reflection_principle: true    # Path counting technique
  
  # Optimization techniques
  memoization: true
  lookup_tables: true          # For small Catalan numbers
  
# Bijective proofs and interpretations
bijective_interpretations:
  ballot_sequences: true        # Monotonic lattice paths
  full_binary_trees: true       # Tree structures
  triangulated_polygons: true   # Geometric configurations  
  mountain_ranges: true         # Dyck paths as mountains
  handshake_lemma: true        # Graph theory connections